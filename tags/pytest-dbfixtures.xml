<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cases (Posts about pytest-dbfixtures)</title><link>http://blog.fizyk.net.pl/</link><description></description><atom:link href="http://blog.fizyk.net.pl/tags/pytest-dbfixtures.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 16 Jun 2021 11:18:44 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Testing web applications using SQLAlchemy.</title><link>http://blog.fizyk.net.pl/blog/testing-web-applications-using-sqlalchemy/</link><dc:creator>Grzegorz Śliwiński</dc:creator><description>&lt;div&gt;&lt;p&gt;Some time ago, I decided to refactor &lt;a class="reference external" href="https://pypi.python.org/pypi/pyramid_fullauth"&gt;pyramid_fullauth&lt;/a&gt; tests from mostly unittest style
(though run by py.test) to same factor function style tests and base them on
&lt;a class="reference external" href="https://pypi.python.org/pypi/pytest_pyramid"&gt;pytest_pyramid&lt;/a&gt; package,
when it comes to test webapp. Everhything went smoothly,
until I stumbled upon &lt;a class="reference external" href="http://www.sqlalchemy.org/"&gt;SQLAlchemy&lt;/a&gt; session in tests.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.fizyk.net.pl/blog/testing-web-applications-using-sqlalchemy/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>fullauth</category><category>pytest-dbfixtures</category><category>python</category><category>sqlalchemy</category><guid>http://blog.fizyk.net.pl/blog/testing-web-applications-using-sqlalchemy/</guid><pubDate>Wed, 09 Apr 2014 21:13:57 GMT</pubDate></item></channel></rss>