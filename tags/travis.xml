<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cases (Posts about travis)</title><link>https://fizyk.dev/</link><description></description><atom:link href="https://fizyk.dev/tags/travis.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 19 Mar 2025 20:55:38 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Running python tests on Travis's OSX workers</title><link>https://fizyk.dev/blog/running-python-tests-on-traviss-osx-workers/</link><dc:creator>Grzegorz Śliwiński</dc:creator><description>&lt;div&gt;&lt;p&gt;I, and my colleages are running tests mostly on linux, since our packages usually are clean python implementation.
However, for &lt;a class="reference external" href="https://pypi.python.org/pypi/mirakuru/"&gt;mirakuru&lt;/a&gt;, which we use to govern processes in tests,
and by extension &lt;a class="reference external" href="https://pypi.python.org/pypi/pytest-dbfixtures/"&gt;pytest-dbfixtures&lt;/a&gt;,
which has predefined process fixtures for pytest, we wanted to run tests also on osx. Travis.ci for
a long time had option to configure osx workers and linux, however python builds on osx are kind of broken by default.&lt;/p&gt;
&lt;p&gt;Travis.ci has a long standing &lt;a class="reference external" href="https://github.com/travis-ci/travis-ci/issues/2312"&gt;bug report&lt;/a&gt; for this issue,
which will get 2 years old in this May. Apparently, just setting python as a language and osx among
the system to test on won't work for apple's operating system.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fizyk.dev/blog/running-python-tests-on-traviss-osx-workers/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>osx</category><category>python</category><category>tests</category><category>travis</category><guid>https://fizyk.dev/blog/running-python-tests-on-traviss-osx-workers/</guid><pubDate>Sun, 20 Mar 2016 20:44:55 GMT</pubDate></item><item><title>Deploying python packages with travis-ci</title><link>https://fizyk.dev/blog/deploying-python-packages-with-travis-ci/</link><dc:creator>Grzegorz Śliwiński</dc:creator><description>&lt;div&gt;&lt;p&gt;Deploying applications is tedious, so is deployin packages, no matter the package repository.
For example after applying changes to codebase, the code needs to be tagged,
as to not loose the point of release from sight, after that the packages needs
to be built and uploaded. It's far too many commands that need to be done.
One might develop some deployment scripts. Sure, but what, if we could use something else to
deploy packages for us?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fizyk.dev/blog/deploying-python-packages-with-travis-ci/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>pypi</category><category>python</category><category>travis</category><guid>https://fizyk.dev/blog/deploying-python-packages-with-travis-ci/</guid><pubDate>Sun, 04 May 2014 17:21:09 GMT</pubDate></item></channel></rss>