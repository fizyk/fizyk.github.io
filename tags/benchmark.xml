<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cases (Posts about benchmark)</title><link>https://fizyk.dev/</link><description></description><atom:link href="https://fizyk.dev/tags/benchmark.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 19 Mar 2025 20:53:23 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>unicode is faster than decode</title><link>https://fizyk.dev/blog/unicode-is-faster-than-decode/</link><dc:creator>Grzegorz Śliwiński</dc:creator><description>&lt;p&gt;This might come as a surprise, but in python 2.7, it's actually faster to decode strigs with unicode function, than decode method.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-1" name="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-1" href="https://fizyk.dev/blog/unicode-is-faster-than-decode/#rest_code_ddecb741c3f147228fbe6ddeccf1b46f-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;timeit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt;
&lt;a id="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-2" name="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-2" href="https://fizyk.dev/blog/unicode-is-faster-than-decode/#rest_code_ddecb741c3f147228fbe6ddeccf1b46f-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"grzegrzółka"&lt;/span&gt;
&lt;a id="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-3" name="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-3" href="https://fizyk.dev/blog/unicode-is-faster-than-decode/#rest_code_ddecb741c3f147228fbe6ddeccf1b46f-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-4" name="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-4" href="https://fizyk.dev/blog/unicode-is-faster-than-decode/#rest_code_ddecb741c3f147228fbe6ddeccf1b46f-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-5" name="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-5" href="https://fizyk.dev/blog/unicode-is-faster-than-decode/#rest_code_ddecb741c3f147228fbe6ddeccf1b46f-5"&gt;&lt;/a&gt;&lt;span class="mf"&gt;1.4051871299743652&lt;/span&gt;
&lt;a id="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-6" name="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-6" href="https://fizyk.dev/blog/unicode-is-faster-than-decode/#rest_code_ddecb741c3f147228fbe6ddeccf1b46f-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;tu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-7" name="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-7" href="https://fizyk.dev/blog/unicode-is-faster-than-decode/#rest_code_ddecb741c3f147228fbe6ddeccf1b46f-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;tu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-8" name="rest_code_ddecb741c3f147228fbe6ddeccf1b46f-8" href="https://fizyk.dev/blog/unicode-is-faster-than-decode/#rest_code_ddecb741c3f147228fbe6ddeccf1b46f-8"&gt;&lt;/a&gt;&lt;span class="mf"&gt;0.4272959232330322&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, unicode method isn't valid for python3, but you can always mock it's behaviour for py3 in some compat.py file, but... strings in python3 are finally unicode, not ascii like in python2.7,so unless you develop some nice library, you probably know what python version will be running your project.&lt;/p&gt;</description><category>benchmark</category><category>python</category><category>tip</category><guid>https://fizyk.dev/blog/unicode-is-faster-than-decode/</guid><pubDate>Wed, 17 Jul 2013 21:08:14 GMT</pubDate></item></channel></rss>